1.问题描述：1155. 掷骰子的N种方法 
这里有 d 个一样的骰子，每个骰子上都有 f 个面，分别标号为 1, 2, ..., f。
我们约定：掷骰子的得到总点数为各骰子面朝上的数字的总和。
如果需要掷出的总点数为 target，请你计算出有多少种不同的组合情况（所有的组合情况总共有 f^d 种），模 10^9 + 7 后返回
解决：
class Solution {
    private static final int MOD = 1000000007;

    public int numRollsToTarget(int d, int f, int target) {
        int[][] dp = new int[d][target+1];
        for(int i = 1;i <= target;i++)
            dp[0][i] = f >= i ? 1 : 0;
        for(int row = 1;row < d;row++)
            for(int col = 1;col <= target;col++){
                int curNum = 0;
                for(int k = 1;k <= f && col - k >= 0;k++){
                    curNum += dp[row-1][col-k];
                    curNum = curNum % MOD;
                }
                dp[row][col] = curNum;
            }
        return dp[d-1][target];
    }
}
